[gd_resource type="ShaderMaterial" load_steps=7 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorFunc" id=2]
function = 5

[sub_resource type="VisualShaderNodeVectorCompose" id=3]
default_input_values = [ 0, 0.0, 1, 1.0, 2, 0.5 ]

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 2

[sub_resource type="VisualShader" id=6]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;




void vertex() {
// Output:0

}

void fragment() {
// Input:2
	float n_out2p0 = TIME;

// VectorCompose:4
	float n_in4p1 = 1.00000;
	float n_in4p2 = 0.50000;
	vec3 n_out4p0 = vec3(n_out2p0, n_in4p1, n_in4p2);

// VectorFunc:3
	vec3 n_out3p0;
	{
		vec3 c = n_out4p0;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out3p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}

// ScalarOp:6
	float n_in6p1 = 5.00000;
	float n_out6p0 = n_out2p0 * n_in6p1;

// ScalarFunc:5
	float n_out5p0 = sin(n_out6p0);

// Output:0
	ALBEDO = n_out3p0;
	ALPHA = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -318.972, -55.0463 )
nodes/fragment/0/position = Vector2( 960, 60 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -60, 80 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 520, 80 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 200, 80 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 360, 300 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 80, 240 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 2, 0, 4, 0, 4, 0, 3, 0, 5, 0, 0, 1, 2, 0, 6, 0, 6, 0, 5, 0 )

[resource]
shader = SubResource( 6 )
